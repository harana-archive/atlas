steps:

  - name: ":maven: Build Atlas"
    env:
      MAVEN_OPTS: "-Xmx2048m -XX:MaxPermSize=512m -XX:+TieredCompilation -XX:TieredStopAtLevel=1"
    command: >
      rm -fr atlas &&
      git clone -b ${ATLAS_TAG} --single-branch --depth 1 https://github.com/apache/atlas atlas &&
      cd atlas &&
      mvn clean package -Pdist -DskipTests -Dmaven.artifact.threads=20 &&
      cd distro/target && mv apache-atlas-*-bin.tar.gz atlas.tgz &&
      buildkite-agent artifact upload atlas.tgz

  - name: ":maven: Build DynamoDB"
    env:
      SHADE_PLUGIN: >
        <profile><id>shade</id><build><plugins>
        <plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-shade-plugin</artifactId> \
        <version>3.1.0</version><executions><execution><phase>package</phase><goals><goal>shade</goal></goals> \
        <configuration><relocations><relocation><pattern>com.google</pattern>
        <shadedPattern>com.shaded.google</shadedPattern></relocation></relocations>
        <artifactSet><includes><include>com.google.guava:*</include></includes></artifactSet>
        </configuration></execution></executions></plugin></plugins></build></profile>
    command: >
      rm -fr dynamodb-janusgraph &&
      git clone -b ${DYNAMODB_TAG} --single-branch --depth 1 https://github.com/awslabs/dynamodb-janusgraph-storage-backend dynamodb-janusgraph &&
      cd dynamodb-janusgraph &&
      sed -i -e "s#<profiles>#<profiles>${SHADE_PLUGIN}#" pom.xml &&
      mvn clean package -Pshade -DskipTests -Dmaven.artifact.threads=20 &&
      cd target && mv dynamodb-janusgraph-storage-backend*.jar dynamodb-janusgraph-storage-backend.jar &&
      buildkite-agent artifact upload dynamodb-janusgraph-storage-backend*.jar &&
      cd dependencies && rm guava*.jar &&
      tar vcfz ../dynamodb-janusgraph-deps.tgz *.jar && cd .. &&
      buildkite-agent artifact upload dynamodb-janusgraph-deps.tgz

  - wait

  - name: ":maven: Package Log4J-ElasticSearch"
    env:
      LOG4J_ES_APPENDER_VERSION: "1.1.1"
      LOG4J_VERSION: "2.11.0"
      DISRUPTOR_VERSION: "3.4.2"
      JACKSON_VERSION: "2.9.6"
    command: >
      mkdir log4j-temp && cd log4j-temp
      curl "http://search.maven.org/remotecontent?filepath=org/appenders/log4j/log4j2-elasticsearch5-bulkprocessor/${LOG4J_ES_APPENDER_VERSION}/log4j2-elasticsearch5-bulkprocessor-${LOG4J_ES_APPENDER_VERSION}.jar" -o log4j2-elasticsearch5-bulkprocessor-${LOG4J_ES_APPENDER_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=com/fasterxml/jackson/core/jackson-databind/${JACKSON_VERSION}/jackson-annotations-${JACKSON_VERSION}.jar" -o jackson-annotations-${JACKSON_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=com/fasterxml/jackson/core/jackson-databind/${JACKSON_VERSION}/jackson-core-${JACKSON_VERSION}.jar" -o jackson-core-${JACKSON_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=com/fasterxml/jackson/core/jackson-databind/${JACKSON_VERSION}/jackson-databind-${JACKSON_VERSION}.jar" -o jackson-databind-${JACKSON_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=org/apache/logging/log4j/log4j-api/${LOG4J_VERSION}/log4j-api-${LOG4J_VERSION}.jar" -o log4j-api-${LOG4J_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=org/apache/logging/log4j/log4j-core/${LOG4J_VERSION}/log4j-core-${LOG4J_VERSION}.jar" -o log4j-core-${LOG4J_VERSION}.jar
      curl "http://search.maven.org/remotecontent?filepath=com/lmax/disruptor/${DISRUPTOR_VERSION}/disruptor-${DISRUPTOR_VERSION}.jar" -o disruptor-${DISRUPTOR_VERSION}.jar     
      tar vcfz ../log4j-es-appender-deps.tgz *.jar && cd .. && rm -fr log4j-temp
      buildkite-agent artifact upload log4j-es-appender-deps.tgz

  - name: ":docker: Build Image"
    command: >
      buildkite-agent artifact download atlas.tgz . &&
      buildkite-agent artifact download dynamodb-janusgraph-deps.tgz . &&
      buildkite-agent artifact download dynamodb-janusgraph-storage-backend.jar . &&
      buildkite-agent artifact download log4j-es-appender-deps.tgz &&
     
      aws s3 cp atlas.tgz s3://deploy-buildkite-cache/atlas.tgz
      aws s3 cp dynamodb-janusgraph-deps.tgz s3://deploy-buildkite-cache/dynamodb-janusgraph-deps.tgz
      aws s3 cp dynamodb-janusgraph-storage-backend.jar s3://deploy-buildkite-cache/dynamodb-janusgraph-storage-backend.jar
      aws s3 cp log4j-es-appender-deps.tgz s3://deploy-buildkite-cache/log4j-es-appender-deps.tgz     
     
      docker build . -t ${DOCKER_IMAGE_REPO}

  - wait

  - name: ":docker: Push Image"
    command: >
      $(aws ecr get-login --no-include-email --region ap-southeast-2) &&
      docker push ${DOCKER_IMAGE_REPO}
